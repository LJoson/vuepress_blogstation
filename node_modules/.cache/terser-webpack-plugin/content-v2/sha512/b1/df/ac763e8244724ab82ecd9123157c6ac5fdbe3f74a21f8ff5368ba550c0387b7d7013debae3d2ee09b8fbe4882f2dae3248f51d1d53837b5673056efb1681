{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{635:function(t,a,e){\"use strict\";e.r(a);var s=e(3),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"p\"),e(\"div\",{staticClass:\"table-of-contents\"},[e(\"ul\",[e(\"li\",[e(\"a\",{attrs:{href:\"#哈希表\"}},[t._v(\"哈希表\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#动态规划\"}},[t._v(\"动态规划\")])])])]),e(\"p\"),t._v(\" \"),e(\"h1\",{attrs:{id:\"引言\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#引言\"}},[t._v(\"#\")]),t._v(\" 引言\")]),t._v(\" \"),e(\"p\",[t._v(\"Leetcode刷题专题，加深自己对语言的了解，对数据结构以及算法的理解。\"),e(\"br\"),t._v(\"\\n语言：c++为主\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"哈希表\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#哈希表\"}},[t._v(\"#\")]),t._v(\" 哈希表\")]),t._v(\" \"),e(\"p\",[t._v(\"刷过一些学校的oj,没有想到在学习力扣两个数之和的解法时还有这么一个思路。\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"什么是哈希表？\\n散列表（Hash table，也叫哈希表），是根据关键码值(Key value)而直接进行访问的数据结构。也就是说，它通过把关键码值映射到表中一个位置来访问记录，以加快查找的速度。这个映射函数叫做散列函数，存放记录的数组叫做散列表。\\n给定表M，存在函数f(key)，对任意给定的关键字值key，代入函数后若能得到包含该关键字的记录在表中的地址，则称表M为哈希(Hash）表，函数f(key)为哈希(Hash) 函数。\")])]),t._v(\" \"),e(\"p\",[t._v(\"https://zh.wikipedia.org/wiki/%E5%93%88%E5%B8%8C%E8%A1%A8\")]),t._v(\" \"),e(\"p\",[t._v(\"https://www.cnblogs.com/xiekeli/archive/2012/01/13/2321207.html\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"动态规划\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#动态规划\"}},[t._v(\"#\")]),t._v(\" 动态规划\")])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}