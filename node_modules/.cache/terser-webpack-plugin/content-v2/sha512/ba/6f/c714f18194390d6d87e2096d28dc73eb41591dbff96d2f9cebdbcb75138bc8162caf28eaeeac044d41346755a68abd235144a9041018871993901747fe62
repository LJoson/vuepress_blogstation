{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{638:function(t,e,a){\"use strict\";a.r(e);var s=a(3),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"p\"),a(\"div\",{staticClass:\"table-of-contents\"},[a(\"ul\",[a(\"li\",[a(\"a\",{attrs:{href:\"#进程\"}},[t._v(\"进程：\")])]),a(\"li\",[a(\"a\",{attrs:{href:\"#知识补充\"}},[t._v(\"知识补充\")])])])]),a(\"p\"),t._v(\" \"),a(\"h1\",{attrs:{id:\"引言\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#引言\"}},[t._v(\"#\")]),t._v(\" 引言\")]),t._v(\" \"),a(\"p\",[t._v('GlimmerOS-The GlimmerOS is based on the book \"30-day homemade operating system\", drawing on many of its ideas, as well as the project'),a(\"a\",{attrs:{href:\"https://github.com/cfenollosa/os-tutorial\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"os-tutorial\"),a(\"OutboundLink\")],1),a(\"br\")]),t._v(\" \"),a(\"p\",[t._v(\"GlimmerOS是基于《30天自制操作系统》一书，借鉴其中很多思路方法和工具,以及项目\"),a(\"a\",{attrs:{href:\"https://github.com/cfenollosa/os-tutorial\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"os-tutorial\"),a(\"OutboundLink\")],1),t._v(\" \"),a(\"img\",{attrs:{src:\"/img/cs/os/1.JPG\",alt:\"\"}})]),t._v(\" \"),a(\"h2\",{attrs:{id:\"进程\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程\"}},[t._v(\"#\")]),t._v(\" 进程：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"汇编阶段\")]),t._v(\" \"),a(\"p\",[t._v(\"启动区等引入部分\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"C阶段以及32位模式\")]),t._v(\" \"),a(\"p\",[t._v(\"中断处理，鼠标控制等\")])])]),t._v(\" \"),a(\"p\",[t._v(\"未完仍然在开发学习中\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"知识补充\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#知识补充\"}},[t._v(\"#\")]),t._v(\" 知识补充\")]),t._v(\" \"),a(\"p\",[t._v(\"DB指令是“define byte”的缩写，也就是往文件里直接写入1个字节的指令。笔者喜欢用大写字母来写汇编指令，但小写的“db”也是一样的。在汇编语言的世界里，这个指令是程序员的杀手铜，也就是说只要有了DB指令，我们就可以用它做出任何数据（甚至是程序）。所以可以说，没有用汇编语言做不出来的文件。文本文件也好，图像文件也好，只要能叫上名的文件，我们都能用汇编语言写出来。而其他的语言（比如C语言）就没有这么万能。\\nRESB指令是“reserve byte”的略写，如果想要从现在的地址开始空出10个字节来，就可以写成RESB10，意思是我们预约了这10个字节（大家可以想象成在对号入座的火车里，预订了10个连号座位的情形）。而且nask不仅仅是把指定的地址空出来，它还会在空出来的地址上自动填入0x00，所以我们这次用这个指令就可以输出很多的0x00，省得我们自己去写18万行程序了，真是帮了个大忙。\")]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"sources\")]),t._v(\" \"),a(\"p\",[t._v(\"http://oswiki.osask.jp/?FrontPage\")]),t._v(\" \"),a(\"p\",[t._v(\"https://qemu.weilnetz.de/w64/\")]),t._v(\" \"),a(\"p\",[t._v(\"https://www.jianshu.com/p/ba6a32d68ed5\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://github.com/yourtion/30dayMakeOS\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/yourtion/30dayMakeOS\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://github.com/cfenollosa/os-tutorial\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/cfenollosa/os-tutorial\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"p\",[t._v(\"http://hrb.osask.jp/\")]),t._v(\" \"),a(\"p\",[t._v(\"https://wiki.osdev.org/Main_Page\")]),t._v(\" \"),a(\"p\",[t._v(\"https://my.oschina.net/superkangning/blog/528881\")]),t._v(\" \"),a(\"p\",[t._v(\"https://blog.csdn.net/jiangwei0512/article/details/56495296\")])])])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}