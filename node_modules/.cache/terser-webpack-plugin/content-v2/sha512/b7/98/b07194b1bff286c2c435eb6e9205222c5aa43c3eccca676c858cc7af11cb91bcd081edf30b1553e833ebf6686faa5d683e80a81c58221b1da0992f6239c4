{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{415:function(t,n,s){\"use strict\";s.r(n);var a=s(2),i=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"p\"),s(\"div\",{staticClass:\"table-of-contents\"},[s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#二值化（thresholding）\"}},[t._v(\"二值化（Thresholding）\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#大津二值化算法（otsu-s-method）\"}},[t._v(\"大津二值化算法（Otsu's Method）\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#kittle算法\"}},[t._v(\"Kittle算法\")])])])]),s(\"p\"),t._v(\" \"),s(\"h1\",{attrs:{id:\"图像二值化\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#图像二值化\"}},[t._v(\"#\")]),t._v(\" 图像二值化\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"二值化（thresholding）\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二值化（thresholding）\"}},[t._v(\"#\")]),t._v(\" 二值化（Thresholding）\")]),t._v(\" \"),s(\"p\",[t._v(\"二值化是将图像使用黑和白两种值表示的方法，就是将图像上的像素点的灰度值设置为0或255，也就是将整个图像呈现出明显的黑白效果的过程。\\n（其中0是黑，255是白）。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-c++ line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('\\n#include <opencv2/core.hpp>\\n#include <opencv2/highgui.hpp>\\n#include <iostream>\\n\\nint main(int argc, const char* argv[]){\\n    cv::Mat img = cv::imread(\"imagepath\", cv::IMREAD_COLOR);\\n    int height = img.rows;\\n    int width  = img.cols;\\n\\n    int th = 128;//阈值，Threshold value\\n\\n    cv::Mat out = cv::Mat::zeros(height, width, CV_8UC1);\\n    //灰度化\\n    for (int j=0; j<height; j++){\\n    for (int i=0; i<width; i++){\\n      uchar val = (int)((float)img.at<cv::Vec3b>(j,i)[0] * 0.0722 +\\t\\\\\\n\\t\\t\\t(float)img.at<cv::Vec3b>(j,i)[1] * 0.7152 +\\t\\\\\\n\\t\\t\\t(float)img.at<cv::Vec3b>(j,i)[2] * 0.2126);\\n      if (val < th)\\n\\t  {\\n\\t\\t  val = 0;\\n      } \\n\\t  else \\n\\t  {\\n\\t\\t  val = 255;\\n      }\\n      out.at<uchar>(j,i) = val;//通过跟阈值比较进行二值化\\n    }\\n  }\\n  \\n  //cv::imwrite(\"out.jpg\", out);\\n  cv::imshow(\"answer\", out);\\n  cv::waitKey(0);\\n  cv::destroyAllWindows();\\n\\n  return 0;\\n\\n\\n\\n}\\n\\n')])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"21\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"22\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"23\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"24\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"25\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"26\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"27\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"28\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"29\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"30\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"31\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"32\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"33\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"34\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"35\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"36\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"37\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"38\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"39\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"40\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"41\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"42\")]),s(\"br\")])]),s(\"p\",[t._v(\"::: tips 阈值\")]),t._v(\" \"),s(\"p\",[t._v(\"RGB三彩图需要先将图片灰度化，再对图像像素设置一个阈值进行二值化操作。\"),s(\"br\"),t._v(\"\\n阈值，可以看作一个分界指，两边的像素（大于阈值或者小于阈值）赋值是0或者255.\"),s(\"br\")]),t._v(\" \"),s(\"p\",[t._v(\":::\\n但是图片二值化过程中人工确定阈值往往效果不好。于是有了otsu,大津法二值化提出。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"大津二值化算法（otsu-s-method）\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#大津二值化算法（otsu-s-method）\"}},[t._v(\"#\")]),t._v(\" 大津二值化算法（Otsu's Method）\")]),t._v(\" \"),s(\"p\",[t._v(\"大津法（OTSU）是一种图像灰度自适应的阈值分割算法，是1979年由日本学者大津提出，并由他的名字命名的。大津法按照图像上灰度值的分布，将图像分成背景和前景两部分看待，前景就是我们要按照阈值分割出来的部分。背景和前景的分界值就是我们要求出的阈值。遍历不同的阈值，计算不同阈值下对应的背景和前景之间的类内方差，当类内方差取得极大值时，此时对应的阈值就是大津法（OTSU算法）所求的阈值。\\n\"),s(\"a\",{attrs:{href:\"https://blog.csdn.net/dcrmg/article/details/52216622\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"来源\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"p\",[t._v(\"::: tips 算法描述\")]),t._v(\" \"),s(\"p\",[t._v(\"对于图像I(x,y)，前景(即目标，白色部分)和背景的分割阈值记作T，属于前景（大于阈值）的像素点数占整幅图像的比例记为ω0，其平均灰度μ0；\"),s(\"br\"),t._v(\"\\n背景像素（小于阈值）点数占整幅图像的比例为ω1，其平均灰度为μ1。图像的总平均灰度记为μ1，类间方差记为g。\"),s(\"br\")]),t._v(\" \"),s(\"p\",[t._v(\"假设图像的背景较暗，并且图像的大小为M×N，图像中像素的灰度值大于阈值T的像素个数记作N0，像素灰度小于阈值T的像素个数记作N1，\"),s(\"br\")]),t._v(\" \"),s(\"p\",[t._v(\"则有：\"),s(\"br\"),t._v(\"\\nω0=N0/ M×N    (1)  \"),s(\"br\"),t._v(\"\\nω1=N1/ M×N    (2）\"),s(\"br\"),t._v(\"\\nN0+N1=M×N    (3)    \"),s(\"br\"),t._v(\"\\nω0+ω1=1　　　 (4)\"),s(\"br\"),t._v(\"\\nμ=ω0\"),s(\"em\",[t._v(\"μ0+ω1\")]),t._v(\"μ1 (5)\"),s(\"br\"),t._v(\"\\ng=ω0(μ0-μ)^2+ω1(μ1-μ)^2 (6)\"),s(\"br\")]),t._v(\" \"),s(\"p\",[t._v(\"将式(5)代入式(6),得到等价公式:\"),s(\"br\"),t._v(\"\\ng=ω0ω1(μ0-μ1)^2   (7)　\"),s(\"br\"),t._v(\"\\n这个就是类间方差的公式表述,采用遍历的方法得到使类间方差g最大的阈值T,即为所求。\\n:::\\n实现代码\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-c++ line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('#include <opencv2/core.hpp>\\n#include <opencv2/highgui.hpp>\\n#include <iostream>\\n#include <math.h>\\n\\nint main(int argc, const char* argv[]) {\\n\\tcv::Mat img = cv::imread(\"imagepath\", cv::IMREAD_COLOR);\\n\\n\\tint height = img.rows;\\n\\tint width = img.cols;\\n\\n\\tcv::Mat out = cv::Mat::zeros(height, width, CV_8UC1);\\n\\n\\t// gray灰度化\\n\\tint val = 0;\\n\\tfor (int j = 0; j < height; j++) {\\n\\t\\tfor (int i = 0; i < width; i++) {\\n\\t\\t\\tval = (int)((float)img.at<cv::Vec3b>(j, i)[0] * 0.0722 + \\\\\\n\\t\\t\\t\\t(float)img.at<cv::Vec3b>(j, i)[1] * 0.7152 + \\\\\\n\\t\\t\\t\\t(float)img.at<cv::Vec3b>(j, i)[2] * 0.2126);\\n\\t\\t\\tout.at<uchar>(j, i) = (uchar)val;\\n\\t\\t}\\n\\t}\\n\\n\\t// determine threshold\\n\\tdouble w0 = 0, w1 = 0;\\n\\tdouble N = 0, N1 = 0;\\n\\tdouble max_g = 0, g = 0;\\n\\tint th = 0;\\n\\n\\tfor (int T = 0; T < 255; T++)//遍历求阈值\\n\\t{\\n\\t\\tw0 = 0;\\n\\t\\tw1 = 0;\\n\\t\\tN = 0;\\n\\t\\tN1 = 0;\\n\\t\\tfor (int j = 0; j < height; j++)\\n\\t\\t{\\n\\t\\t\\tfor (int i = 0; i < width; i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\tval = (int)(out.at<uchar>(j, i));\\n\\t\\t\\t\\tif (val > T) {\\n\\t\\t\\t\\t\\tw0++;\\n\\t\\t\\t\\t\\tN += val;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tw1++;\\n\\t\\t\\t\\t\\tN1 += val;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tN /= w0;//前景平均灰度\\n\\t\\tN1 /= w1;//背景平均灰度\\n\\t\\tw0 /= (height * width);//比例\\n\\t\\tw1 /= (height * width);\\n\\t\\tg = w0 * w1 * pow((N - N1), 2);//类间方差\\n\\n\\t\\tif (g > max_g) { //判断最大类间方差\\n\\t\\t\\tmax_g = g;\\n\\t\\t\\tth = T;\\n\\t\\t}\\n\\n\\t}\\n\\n\\t// binalization二值化\\n\\tfor (int j = 0; j < height; j++)\\n\\t{\\n\\t\\tfor (int i = 0; i < width; i++)\\n\\t\\t{\\n\\t\\t\\tval = (int)(out.at<uchar>(j, i));\\n\\t\\t\\tif (val < th)\\n\\t\\t\\t{\\n\\t\\t\\t\\tval = 0;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tval = 255;\\n\\t\\t\\t}\\n\\t\\t\\tout.at<uchar>(j, i) = (uchar)val;\\n\\t\\t}\\n\\t}\\n\\n\\tstd::cout << \"threshold >> \" << th << std::endl;\\n\\n\\t//cv::imwrite(\"out.jpg\", out);\\n\\tcv::imshow(\"answer\", out);\\n\\tcv::waitKey(0);\\n\\tcv::destroyAllWindows();\\n\\n\\treturn 0;\\n\\n}\\n')])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"21\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"22\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"23\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"24\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"25\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"26\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"27\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"28\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"29\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"30\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"31\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"32\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"33\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"34\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"35\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"36\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"37\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"38\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"39\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"40\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"41\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"42\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"43\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"44\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"45\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"46\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"47\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"48\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"49\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"50\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"51\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"52\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"53\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"54\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"55\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"56\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"57\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"58\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"59\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"60\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"61\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"62\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"63\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"64\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"65\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"66\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"67\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"68\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"69\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"70\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"71\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"72\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"73\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"74\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"75\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"76\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"77\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"78\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"79\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"80\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"81\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"82\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"83\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"84\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"85\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"86\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"87\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"88\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"89\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"90\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"91\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"92\")]),s(\"br\")])]),s(\"h2\",{attrs:{id:\"kittle算法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#kittle算法\"}},[t._v(\"#\")]),t._v(\" Kittle算法\")])])}),[],!1,null,null,null);n.default=i.exports}}]);","extractedComments":[]}