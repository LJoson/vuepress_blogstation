{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{415:function(s,n,a){\"use strict\";a.r(n);var t=a(2),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"p\"),a(\"div\",{staticClass:\"table-of-contents\"},[a(\"ul\",[a(\"li\",[a(\"a\",{attrs:{href:\"#_1-通道交换\"}},[s._v(\"1.通道交换\")])]),a(\"li\",[a(\"a\",{attrs:{href:\"#_2-灰度化（grayscale）\"}},[s._v(\"2. 灰度化（Grayscale）\")])])])]),a(\"p\"),s._v(\" \"),a(\"h1\",{attrs:{id:\"引言\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#引言\"}},[s._v(\"#\")]),s._v(\" 引言\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"此学习是基于gitnub上一个\"),a(\"a\",{attrs:{href:\"https://github.com/KuKuXia/Image_Processing_100_Questions\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Image Processing 100 Questions\"),a(\"OutboundLink\")],1),s._v(\",有日语等三个版本，这是英文版，讨论的是结合opencv进行图像处理问题，有python和c++，文章以c++为主。\")]),s._v(\" \"),a(\"li\",[s._v(\"Image Processing指的是计算机等处理图像的一种技术，所以首先要知道图像在计算机中的存储方式。图像文件格式是记录和存储影像信息的格式。对数字图像进行存储、处理、传播，必须采用一定的图像格式，也就是把图像的像素按照一定的方式进行组织和存储，把图像数据存储成文件就得到图像文件。而图像以一个二维数组形式存储，要访问其像素点，可看如图(RGB图像中每个点（像素）由3个byte表示（红，绿，蓝或R,G,B三分量）)\")])]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/img/algorithm/image.png\",alt:\"\"}})]),s._v(\" \"),a(\"p\",[s._v(\"上图展示了图片在计算机中的二维存储坐标系，图片的高度对应y轴和行数，而宽度对应了x轴及列数，因此一张宽度为640像素，高度为480像素分辨率的灰度图就可以表示为：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"unsigned char image[480][640]\\n\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[s._v(\"根据这种定义方式,如果我们讨论一个位于 x, y 处的像素,那么它在程序中的访问方式应该是：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"unsigned char pixel = image[y][x];\\n\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"ul\",[a(\"li\",[s._v(\"而在我学习图形化游戏编程时，遇到一个graphic(图形)的概念，非常有趣，我觉得\"),a(\"a\",{attrs:{href:\"https://blog.csdn.net/xingfuyusheng/article/details/81564038\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"计算机中的图形（Graphic）和图像（Image）\"),a(\"OutboundLink\")],1),s._v(\"这篇文章为我们展现了相关概念。\")])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"_1-通道交换\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-通道交换\"}},[s._v(\"#\")]),s._v(\" 1.通道交换\")]),s._v(\" \"),a(\"p\",[s._v(\"将计算机中图像的 RGB 通道替换成 BGR 通道。（R:red,G:green,B:blue)\\n以red通道为例，\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-c++ line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v('//导入opencv库\\n#include <opencv2/core.hpp>\\n#include <opencv2/highgui.hpp>\\n#include <iostream>\\n\\nint main(int argc, const char* argv[]){\\n  cv::Mat img = cv::imread(\"path\", cv::IMREAD_COLOR);//运用opencv读取图像，以BGR存储，path为计算机中图片的绝对路径或者相对路径\\n\\n  int height = img.rows;//高为行数\\n  int width = img.cols;//宽为列数\\n\\n  cv::Mat out = img.clone(); //复制定义一个图像\\n\\n  for (int y=0; y<height; y++){\\n    for (int x=0; x<width; x++){\\n      unsigned char tmp = out.at<cv::Vec3b>(y, x)[0];//定义第三个参数，并把B通道赋值\\n      out.at<cv::Vec3b>(y,x)[0] = img.at<cv::Vec3b>(y,x)[2];//把R通道赋值给B通道\\n      out.at<cv::Vec3b>(y,x)[2] = tmp;//把B通道赋值给R通道\\n    }\\n  }\\n\\n  //cv::imwrite(\"out.jpg\", out);\\n  cv::imshow(\"sample\", out);\\n  cv::waitKey(0);//窗口悬浮\\n  cv::destroyAllWindows();//释放内存空间\\n\\n  return 0;\\n\\n}\\n\\n')])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\")])]),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"cv::Vec3b\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"vector(向量): C++中的一种数据结构,确切的说是一个类.它相当于一个动态的数组,当程序员无法知道自己需要的数组的规模多大时,用其来解决问题可以达到最大节约空间的目的.\"),a(\"br\")]),s._v(\" \"),a(\"li\",[s._v(\"比如Vec<uchar, 3>：\\n其实这句就是定义一个uchar类型的数组，长度为3而已，例如 8U 类型的 RGB 彩色图像可以使用 \"),a(\"Vec3b\",[s._v(\"，\"),a(\"br\"),s._v(\"\\n3 通道 float 类型的矩阵可以使用 \"),a(\"Vec3f\",[s._v(\"。\"),a(\"br\"),s._v(\"\\n对于 Vec 对象，可以使用[]符号如操作数组般读写其元素，如：Vec3b color; 用 color 变量描述一种 RGB 颜色\"),a(\"br\"),s._v(\"\\ncolor[0]=255; //0通道的B 分量\"),a(\"br\"),s._v(\"\\ncolor[1]=0; //1通道的G 分量\"),a(\"br\"),s._v(\"\\ncolor[2]=0; //2通道的R 分量\"),a(\"br\")])],1)],1),s._v(\" \"),a(\"li\",[s._v(\"opencv中RGB彩图通道顺序为BGR，从[0]~[1]~[2]\"),a(\"br\")])])]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\".at\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"cv::mat的成员函数： .at(int y， int x)可以用来存取图像中对应坐标为（x，y）的元素坐标。\")])])]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"读写像素\")]),s._v(\" \"),a(\"p\",[s._v(\"一个RGB像素点的像素值：\"),a(\"br\"),s._v(\"\\nVec3f intensity  = Mat.at\"),a(\"Vec3f\",[s._v(\"(y,x) \"),a(\"br\"),s._v(\"\\nfloat blue = intensity.val[0]   //获得蓝色通道的像素值\"),a(\"br\"),s._v(\"\\nfloat green = intensity.val[1]   //获得绿色通道的像素值\"),a(\"br\"),s._v(\"\\nfloat red = intensity.val[2]      //获得红色通道的像素值\"),a(\"br\"),s._v(\"\\n整型：\"),a(\"br\"),s._v(\"\\nint b = srcImage.at\"),a(\"Vec3b\",[s._v(\"(row, col)[0];  //获取像素值b \"),a(\"br\"),s._v(\"\\nint g = srcImage.at\"),a(\"Vec3b\",[s._v(\"(row, col)[1];  //获取像素值g\"),a(\"br\"),s._v(\"\\nint r = srcImage.at\"),a(\"Vec3b\",[s._v(\"(row, col)[2];  //获取像素值r\"),a(\"br\")])],1)],1)],1)],1)]),s._v(\" \"),a(\"h2\",{attrs:{id:\"_2-灰度化（grayscale）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-灰度化（grayscale）\"}},[s._v(\"#\")]),s._v(\" 2. 灰度化（Grayscale）\")]),s._v(\" \"),a(\"p\",[s._v(\"将图像灰度化！灰度是一种图像亮度的表示方法，通过下式计算：\")]),s._v(\" \"),a(\"p\",[s._v(\"Y = 0.2126 R + 0.7152 G + 0.0722 B\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-c++ line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v('\\n#include <opencv2/core.hpp>\\n#include <opencv2/highgui.hpp>\\n#include <iostream>\\n\\nint main(int argc, const char* argv[]){\\n  cv::Mat img = cv::imread(\"path\", cv::IMREAD_COLOR)//cv::IMREAD_COLOR默认本身彩图格式读取\\n\\n  int height = img.rows;\\n  int width = img.cols;\\n\\n  cv::Mat out = cv::Mat::zeros(height, width, CV_8UC1); //定义相同分辨率的单通道矩阵\\n  \\n  for (int y=0; y<height; y++){\\n    for (int x=0; x<width; x++){\\n      out.at<uchar>(y, x) = (int)((float)img.at<cv::Vec3b>(y,x)[0] * 0.0722 + \\\\\\n\\t\\t\\t\\t  (float)img.at<cv::Vec3b>(y,x)[1] * 0.7152 + \\\\\\n\\t\\t\\t\\t  (float)img.at<cv::Vec3b>(y,x)[2] * 0.2126);  //公式\\n    }\\n  }\\n  \\n  //cv::imwrite(\"out.jpg\", out);\\n  cv::imshow(\"answer\", out);\\n  cv::waitKey(0);\\n  cv::destroyAllWindows();//释放内存\\n\\n  return 0;\\n\\n}\\n\\n')])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\")])]),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"CV_8UC1\")]),s._v(\" \"),a(\"p\",[s._v(\"矩阵数据类型:\"),a(\"br\"),s._v(\"\\n– CV_<bit_depth>(S|U|F)C<number_of_channels>\"),a(\"br\"),s._v(\"\\nS = 符号整型 U = 无符号整型 F = 浮点型\"),a(\"br\")]),s._v(\" \"),a(\"p\",[s._v(\"CV_8UC1 是指一个8位无符号整型单通道矩阵\"),a(\"br\"),s._v(\"\\nCV_32FC2是指一个32位浮点型双通道矩阵\"),a(\"br\"),s._v(\"\\nCV_8UC1 CV_8SC1 CV_16U C1 CV_16SC1\"),a(\"br\"),s._v(\"\\nCV_8UC2 CV_8SC2 CV_16UC2 CV_16SC2\"),a(\"br\"),s._v(\"\\nCV_8UC3 CV_8SC3 CV_16UC3 CV_16SC3\"),a(\"br\"),s._v(\"\\nCV_8UC4 CV_8SC4 CV_16UC4 CV_16SC4\"),a(\"br\"),s._v(\"\\nCV_32SC1 CV_32FC1 CV_64FC1\"),a(\"br\"),s._v(\"\\nCV_32SC2 CV_32FC2 CV_64FC2\"),a(\"br\"),s._v(\"\\nCV_32SC3 CV_32FC3 CV_64FC3\"),a(\"br\"),s._v(\"\\nCV_32SC4 CV_32FC4 CV_64FC4\"),a(\"br\")]),s._v(\" \"),a(\"p\",[s._v(\"其中，通道表示每个点能存放多少个数，类似于RGB彩色图中的每个像素点有三个值，即三通道的。\"),a(\"br\"),s._v(\"\\n图片中的深度表示每个值由多少位来存储，是一个精度问题，一般图片是8bit（位）的，则深度是8.\"),a(\"br\")])])])}),[],!1,null,null,null);n.default=e.exports}}]);","extractedComments":[]}